{"version":3,"sources":["src/app/app.routes.ts","node_modules/@angular/service-worker/fesm2022/service-worker.mjs","src/app/core/interceptors/jwt.interceptor.ts","src/app/core/interceptors/error.interceptor.ts","src/app/app.config.ts","src/app/core/core.module.ts","src/app/app.component.ts","src/app/app.component.html","src/main.ts"],"sourcesContent":["import { Routes } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./features/home/home.routes').then(m => m.HOME_ROUTES)\r\n  },\r\n  {\r\n    path: 'restaurants',\r\n    loadChildren: () => import('./features/restaurants/restaurants.routes').then(m => m.RESTAURANTS_ROUTES)\r\n  },\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => import('./features/auth/auth.routes').then(m => m.AUTH_ROUTES)\r\n  },\r\n  {\r\n    path: 'orders',\r\n    loadChildren: () => import('./features/orders/orders.routes').then(m => m.ORDERS_ROUTES)\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: () => import('./features/admin/admin.routes').then(m => m.ADMIN_ROUTES)\r\n  },\r\n  {\r\n    path: 'cart',\r\n    loadChildren: () => import('./features/cart/cart.routes').then(m => m.CART_ROUTES)\r\n  },\r\n  {\r\n    path: 'profile',\r\n    loadChildren: () => import('./features/profile/profile.routes').then(m => m.PROFILE_ROUTES)\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n","/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵRuntimeError as _RuntimeError, ApplicationRef, Injectable, makeEnvironmentProviders, InjectionToken, Injector, provideAppInitializer, inject, NgZone, ɵformatRuntimeError as _formatRuntimeError, NgModule } from '@angular/core';\nimport { Observable, Subject, NEVER } from 'rxjs';\nimport { switchMap, take, filter, map } from 'rxjs/operators';\nconst ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n/**\n * @publicApi\n */\nclass NgswCommChannel {\n  serviceWorker;\n  worker;\n  registration;\n  events;\n  constructor(serviceWorker, injector) {\n    this.serviceWorker = serviceWorker;\n    if (!serviceWorker) {\n      this.worker = this.events = this.registration = new Observable(subscriber => subscriber.error(new _RuntimeError(5601 /* RuntimeErrorCode.SERVICE_WORKER_DISABLED_OR_NOT_SUPPORTED_BY_THIS_BROWSER */, (typeof ngDevMode === 'undefined' || ngDevMode) && ERR_SW_NOT_SUPPORTED)));\n    } else {\n      let currentWorker = null;\n      const workerSubject = new Subject();\n      this.worker = new Observable(subscriber => {\n        if (currentWorker !== null) {\n          subscriber.next(currentWorker);\n        }\n        return workerSubject.subscribe(v => subscriber.next(v));\n      });\n      const updateController = () => {\n        const {\n          controller\n        } = serviceWorker;\n        if (controller === null) {\n          return;\n        }\n        currentWorker = controller;\n        workerSubject.next(currentWorker);\n      };\n      serviceWorker.addEventListener('controllerchange', updateController);\n      updateController();\n      this.registration = this.worker.pipe(switchMap(() => serviceWorker.getRegistration()));\n      const _events = new Subject();\n      this.events = _events.asObservable();\n      const messageListener = event => {\n        const {\n          data\n        } = event;\n        if (data?.type) {\n          _events.next(data);\n        }\n      };\n      serviceWorker.addEventListener('message', messageListener);\n      // The injector is optional to avoid breaking changes.\n      const appRef = injector?.get(ApplicationRef, null, {\n        optional: true\n      });\n      appRef?.onDestroy(() => {\n        serviceWorker.removeEventListener('controllerchange', updateController);\n        serviceWorker.removeEventListener('message', messageListener);\n      });\n    }\n  }\n  postMessage(action, payload) {\n    return new Promise(resolve => {\n      this.worker.pipe(take(1)).subscribe(sw => {\n        sw.postMessage({\n          action,\n          ...payload\n        });\n        resolve();\n      });\n    });\n  }\n  postMessageWithOperation(type, payload, operationNonce) {\n    const waitForOperationCompleted = this.waitForOperationCompleted(operationNonce);\n    const postMessage = this.postMessage(type, payload);\n    return Promise.all([postMessage, waitForOperationCompleted]).then(([, result]) => result);\n  }\n  generateNonce() {\n    return Math.round(Math.random() * 10000000);\n  }\n  eventsOfType(type) {\n    let filterFn;\n    if (typeof type === 'string') {\n      filterFn = event => event.type === type;\n    } else {\n      filterFn = event => type.includes(event.type);\n    }\n    return this.events.pipe(filter(filterFn));\n  }\n  nextEventOfType(type) {\n    return this.eventsOfType(type).pipe(take(1));\n  }\n  waitForOperationCompleted(nonce) {\n    return new Promise((resolve, reject) => {\n      this.eventsOfType('OPERATION_COMPLETED').pipe(filter(event => event.nonce === nonce), take(1), map(event => {\n        if (event.result !== undefined) {\n          return event.result;\n        }\n        throw new Error(event.error);\n      })).subscribe({\n        next: resolve,\n        error: reject\n      });\n    });\n  }\n  get isEnabled() {\n    return !!this.serviceWorker;\n  }\n}\n\n/**\n * Subscribe and listen to\n * [Web Push\n * Notifications](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices) through\n * Angular Service Worker.\n *\n * @usageNotes\n *\n * You can inject a `SwPush` instance into any component or service\n * as a dependency.\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"inject-sw-push\"\n * header=\"app.component.ts\"></code-example>\n *\n * To subscribe, call `SwPush.requestSubscription()`, which asks the user for permission.\n * The call returns a `Promise` with a new\n * [`PushSubscription`](https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription)\n * instance.\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"subscribe-to-push\"\n * header=\"app.component.ts\"></code-example>\n *\n * A request is rejected if the user denies permission, or if the browser\n * blocks or does not support the Push API or ServiceWorkers.\n * Check `SwPush.isEnabled` to confirm status.\n *\n * Invoke Push Notifications by pushing a message with the following payload.\n *\n * ```ts\n * {\n *   \"notification\": {\n *     \"actions\": NotificationAction[],\n *     \"badge\": USVString,\n *     \"body\": DOMString,\n *     \"data\": any,\n *     \"dir\": \"auto\"|\"ltr\"|\"rtl\",\n *     \"icon\": USVString,\n *     \"image\": USVString,\n *     \"lang\": DOMString,\n *     \"renotify\": boolean,\n *     \"requireInteraction\": boolean,\n *     \"silent\": boolean,\n *     \"tag\": DOMString,\n *     \"timestamp\": DOMTimeStamp,\n *     \"title\": DOMString,\n *     \"vibrate\": number[]\n *   }\n * }\n * ```\n *\n * Only `title` is required. See `Notification`\n * [instance\n * properties](https://developer.mozilla.org/en-US/docs/Web/API/Notification#Instance_properties).\n *\n * While the subscription is active, Service Worker listens for\n * [PushEvent](https://developer.mozilla.org/en-US/docs/Web/API/PushEvent)\n * occurrences and creates\n * [Notification](https://developer.mozilla.org/en-US/docs/Web/API/Notification)\n * instances in response.\n *\n * Unsubscribe using `SwPush.unsubscribe()`.\n *\n * An application can subscribe to `SwPush.notificationClicks` observable to be notified when a user\n * clicks on a notification. For example:\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"subscribe-to-notification-clicks\"\n * header=\"app.component.ts\"></code-example>\n *\n * You can read more on handling notification clicks in the [Service worker notifications\n * guide](ecosystem/service-workers/push-notifications).\n *\n * @see [Push Notifications](https://developers.google.com/web/fundamentals/codelabs/push-notifications/)\n * @see [Angular Push Notifications](https://blog.angular-university.io/angular-push-notifications/)\n * @see [MDN: Push API](https://developer.mozilla.org/en-US/docs/Web/API/Push_API)\n * @see [MDN: Notifications API](https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API)\n * @see [MDN: Web Push API Notifications best practices](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices)\n *\n * @publicApi\n */\nclass SwPush {\n  sw;\n  /**\n   * Emits the payloads of the received push notification messages.\n   */\n  messages;\n  /**\n   * Emits the payloads of the received push notification messages as well as the action the user\n   * interacted with. If no action was used the `action` property contains an empty string `''`.\n   *\n   * Note that the `notification` property does **not** contain a\n   * [Notification][Mozilla Notification] object but rather a\n   * [NotificationOptions](https://notifications.spec.whatwg.org/#dictdef-notificationoptions)\n   * object that also includes the `title` of the [Notification][Mozilla Notification] object.\n   *\n   * [Mozilla Notification]: https://developer.mozilla.org/en-US/docs/Web/API/Notification\n   */\n  notificationClicks;\n  /**\n   * Emits the currently active\n   * [PushSubscription](https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription)\n   * associated to the Service Worker registration or `null` if there is no subscription.\n   */\n  subscription;\n  /**\n   * True if the Service Worker is enabled (supported by the browser and enabled via\n   * `ServiceWorkerModule`).\n   */\n  get isEnabled() {\n    return this.sw.isEnabled;\n  }\n  pushManager = null;\n  subscriptionChanges = new Subject();\n  constructor(sw) {\n    this.sw = sw;\n    if (!sw.isEnabled) {\n      this.messages = NEVER;\n      this.notificationClicks = NEVER;\n      this.subscription = NEVER;\n      return;\n    }\n    this.messages = this.sw.eventsOfType('PUSH').pipe(map(message => message.data));\n    this.notificationClicks = this.sw.eventsOfType('NOTIFICATION_CLICK').pipe(map(message => message.data));\n    this.pushManager = this.sw.registration.pipe(map(registration => registration.pushManager));\n    const workerDrivenSubscriptions = this.pushManager.pipe(switchMap(pm => pm.getSubscription()));\n    this.subscription = new Observable(subscriber => {\n      const workerDrivenSubscription = workerDrivenSubscriptions.subscribe(subscriber);\n      const subscriptionChanges = this.subscriptionChanges.subscribe(subscriber);\n      return () => {\n        workerDrivenSubscription.unsubscribe();\n        subscriptionChanges.unsubscribe();\n      };\n    });\n  }\n  /**\n   * Subscribes to Web Push Notifications,\n   * after requesting and receiving user permission.\n   *\n   * @param options An object containing the `serverPublicKey` string.\n   * @returns A Promise that resolves to the new subscription object.\n   */\n  requestSubscription(options) {\n    if (!this.sw.isEnabled || this.pushManager === null) {\n      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n    }\n    const pushOptions = {\n      userVisibleOnly: true\n    };\n    let key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n    let applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n    for (let i = 0; i < key.length; i++) {\n      applicationServerKey[i] = key.charCodeAt(i);\n    }\n    pushOptions.applicationServerKey = applicationServerKey;\n    return new Promise((resolve, reject) => {\n      this.pushManager.pipe(switchMap(pm => pm.subscribe(pushOptions)), take(1)).subscribe({\n        next: sub => {\n          this.subscriptionChanges.next(sub);\n          resolve(sub);\n        },\n        error: reject\n      });\n    });\n  }\n  /**\n   * Unsubscribes from Service Worker push notifications.\n   *\n   * @returns A Promise that is resolved when the operation succeeds, or is rejected if there is no\n   *          active subscription or the unsubscribe operation fails.\n   */\n  unsubscribe() {\n    if (!this.sw.isEnabled) {\n      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n    }\n    const doUnsubscribe = sub => {\n      if (sub === null) {\n        throw new _RuntimeError(5602 /* RuntimeErrorCode.NOT_SUBSCRIBED_TO_PUSH_NOTIFICATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Not subscribed to push notifications.');\n      }\n      return sub.unsubscribe().then(success => {\n        if (!success) {\n          throw new _RuntimeError(5603 /* RuntimeErrorCode.PUSH_SUBSCRIPTION_UNSUBSCRIBE_FAILED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Unsubscribe failed!');\n        }\n        this.subscriptionChanges.next(null);\n      });\n    };\n    return new Promise((resolve, reject) => {\n      this.subscription.pipe(take(1), switchMap(doUnsubscribe)).subscribe({\n        next: resolve,\n        error: reject\n      });\n    });\n  }\n  decodeBase64(input) {\n    return atob(input);\n  }\n  static ɵfac = function SwPush_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SwPush)(i0.ɵɵinject(NgswCommChannel));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SwPush,\n    factory: SwPush.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwPush, [{\n    type: Injectable\n  }], () => [{\n    type: NgswCommChannel\n  }], null);\n})();\n\n/**\n * Subscribe to update notifications from the Service Worker, trigger update\n * checks, and forcibly activate updates.\n *\n * @see {@link /ecosystem/service-workers/communications Service Worker Communication Guide}\n *\n * @publicApi\n */\nclass SwUpdate {\n  sw;\n  /**\n   * Emits a `VersionDetectedEvent` event whenever a new version is detected on the server.\n   *\n   * Emits a `VersionInstallationFailedEvent` event whenever checking for or downloading a new\n   * version fails.\n   *\n   * Emits a `VersionReadyEvent` event whenever a new version has been downloaded and is ready for\n   * activation.\n   */\n  versionUpdates;\n  /**\n   * Emits an `UnrecoverableStateEvent` event whenever the version of the app used by the service\n   * worker to serve this client is in a broken state that cannot be recovered from without a full\n   * page reload.\n   */\n  unrecoverable;\n  /**\n   * True if the Service Worker is enabled (supported by the browser and enabled via\n   * `ServiceWorkerModule`).\n   */\n  get isEnabled() {\n    return this.sw.isEnabled;\n  }\n  constructor(sw) {\n    this.sw = sw;\n    if (!sw.isEnabled) {\n      this.versionUpdates = NEVER;\n      this.unrecoverable = NEVER;\n      return;\n    }\n    this.versionUpdates = this.sw.eventsOfType(['VERSION_DETECTED', 'VERSION_INSTALLATION_FAILED', 'VERSION_READY', 'NO_NEW_VERSION_DETECTED']);\n    this.unrecoverable = this.sw.eventsOfType('UNRECOVERABLE_STATE');\n  }\n  /**\n   * Checks for an update and waits until the new version is downloaded from the server and ready\n   * for activation.\n   *\n   * @returns a promise that\n   * - resolves to `true` if a new version was found and is ready to be activated.\n   * - resolves to `false` if no new version was found\n   * - rejects if any error occurs\n   */\n  checkForUpdate() {\n    if (!this.sw.isEnabled) {\n      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n    }\n    const nonce = this.sw.generateNonce();\n    return this.sw.postMessageWithOperation('CHECK_FOR_UPDATES', {\n      nonce\n    }, nonce);\n  }\n  /**\n   * Updates the current client (i.e. browser tab) to the latest version that is ready for\n   * activation.\n   *\n   * In most cases, you should not use this method and instead should update a client by reloading\n   * the page.\n   *\n   * <div class=\"docs-alert docs-alert-important\">\n   *\n   * Updating a client without reloading can easily result in a broken application due to a version\n   * mismatch between the application shell and other page resources,\n   * such as lazy-loaded chunks, whose filenames may change between\n   * versions.\n   *\n   * Only use this method, if you are certain it is safe for your specific use case.\n   *\n   * </div>\n   *\n   * @returns a promise that\n   *  - resolves to `true` if an update was activated successfully\n   *  - resolves to `false` if no update was available (for example, the client was already on the\n   *    latest version).\n   *  - rejects if any error occurs\n   */\n  activateUpdate() {\n    if (!this.sw.isEnabled) {\n      return Promise.reject(new _RuntimeError(5601 /* RuntimeErrorCode.SERVICE_WORKER_DISABLED_OR_NOT_SUPPORTED_BY_THIS_BROWSER */, (typeof ngDevMode === 'undefined' || ngDevMode) && ERR_SW_NOT_SUPPORTED));\n    }\n    const nonce = this.sw.generateNonce();\n    return this.sw.postMessageWithOperation('ACTIVATE_UPDATE', {\n      nonce\n    }, nonce);\n  }\n  static ɵfac = function SwUpdate_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SwUpdate)(i0.ɵɵinject(NgswCommChannel));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SwUpdate,\n    factory: SwUpdate.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwUpdate, [{\n    type: Injectable\n  }], () => [{\n    type: NgswCommChannel\n  }], null);\n})();\n\n/*!\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nconst SCRIPT = new InjectionToken(ngDevMode ? 'NGSW_REGISTER_SCRIPT' : '');\nfunction ngswAppInitializer() {\n  if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n    return;\n  }\n  const options = inject(SwRegistrationOptions);\n  if (!('serviceWorker' in navigator && options.enabled !== false)) {\n    return;\n  }\n  const script = inject(SCRIPT);\n  const ngZone = inject(NgZone);\n  const appRef = inject(ApplicationRef);\n  // Set up the `controllerchange` event listener outside of\n  // the Angular zone to avoid unnecessary change detections,\n  // as this event has no impact on view updates.\n  ngZone.runOutsideAngular(() => {\n    // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n    // becomes active. This allows the SW to initialize itself even if there is no application\n    // traffic.\n    const sw = navigator.serviceWorker;\n    const onControllerChange = () => sw.controller?.postMessage({\n      action: 'INITIALIZE'\n    });\n    sw.addEventListener('controllerchange', onControllerChange);\n    appRef.onDestroy(() => {\n      sw.removeEventListener('controllerchange', onControllerChange);\n    });\n  });\n  // Run outside the Angular zone to avoid preventing the app from stabilizing (especially\n  // given that some registration strategies wait for the app to stabilize).\n  ngZone.runOutsideAngular(() => {\n    let readyToRegister;\n    const {\n      registrationStrategy\n    } = options;\n    if (typeof registrationStrategy === 'function') {\n      readyToRegister = new Promise(resolve => registrationStrategy().subscribe(() => resolve()));\n    } else {\n      const [strategy, ...args] = (registrationStrategy || 'registerWhenStable:30000').split(':');\n      switch (strategy) {\n        case 'registerImmediately':\n          readyToRegister = Promise.resolve();\n          break;\n        case 'registerWithDelay':\n          readyToRegister = delayWithTimeout(+args[0] || 0);\n          break;\n        case 'registerWhenStable':\n          readyToRegister = Promise.race([appRef.whenStable(), delayWithTimeout(+args[0])]);\n          break;\n        default:\n          // Unknown strategy.\n          throw new _RuntimeError(5600 /* RuntimeErrorCode.UNKNOWN_REGISTRATION_STRATEGY */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Unknown ServiceWorker registration strategy: ${options.registrationStrategy}`);\n      }\n    }\n    // Don't return anything to avoid blocking the application until the SW is registered.\n    // Catch and log the error if SW registration fails to avoid uncaught rejection warning.\n    readyToRegister.then(() => {\n      // If the registration strategy has resolved after the application has\n      // been explicitly destroyed by the user (e.g., by navigating away to\n      // another application), we simply should not register the worker.\n      if (appRef.destroyed) {\n        return;\n      }\n      navigator.serviceWorker.register(script, {\n        scope: options.scope\n      }).catch(err => console.error(_formatRuntimeError(5604 /* RuntimeErrorCode.SERVICE_WORKER_REGISTRATION_FAILED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Service worker registration failed with: ' + err)));\n    });\n  });\n}\nfunction delayWithTimeout(timeout) {\n  return new Promise(resolve => setTimeout(resolve, timeout));\n}\nfunction ngswCommChannelFactory(opts, injector) {\n  const isBrowser = !(typeof ngServerMode !== 'undefined' && ngServerMode);\n  return new NgswCommChannel(isBrowser && opts.enabled !== false ? navigator.serviceWorker : undefined, injector);\n}\n/**\n * Token that can be used to provide options for `ServiceWorkerModule` outside of\n * `ServiceWorkerModule.register()`.\n *\n * You can use this token to define a provider that generates the registration options at runtime,\n * for example via a function call:\n *\n * {@example service-worker/registration-options/module.ts region=\"registration-options\"\n *     header=\"app.module.ts\"}\n *\n * @publicApi\n */\nclass SwRegistrationOptions {\n  /**\n   * Whether the ServiceWorker will be registered and the related services (such as `SwPush` and\n   * `SwUpdate`) will attempt to communicate and interact with it.\n   *\n   * Default: true\n   */\n  enabled;\n  /**\n   * A URL that defines the ServiceWorker's registration scope; that is, what range of URLs it can\n   * control. It will be used when calling\n   * [ServiceWorkerContainer#register()](https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register).\n   */\n  scope;\n  /**\n   * Defines the ServiceWorker registration strategy, which determines when it will be registered\n   * with the browser.\n   *\n   * The default behavior of registering once the application stabilizes (i.e. as soon as there are\n   * no pending micro- and macro-tasks) is designed to register the ServiceWorker as soon as\n   * possible but without affecting the application's first time load.\n   *\n   * Still, there might be cases where you want more control over when the ServiceWorker is\n   * registered (for example, there might be a long-running timeout or polling interval, preventing\n   * the app from stabilizing). The available option are:\n   *\n   * - `registerWhenStable:<timeout>`: Register as soon as the application stabilizes (no pending\n   *     micro-/macro-tasks) but no later than `<timeout>` milliseconds. If the app hasn't\n   *     stabilized after `<timeout>` milliseconds (for example, due to a recurrent asynchronous\n   *     task), the ServiceWorker will be registered anyway.\n   *     If `<timeout>` is omitted, the ServiceWorker will only be registered once the app\n   *     stabilizes.\n   * - `registerImmediately`: Register immediately.\n   * - `registerWithDelay:<timeout>`: Register with a delay of `<timeout>` milliseconds. For\n   *     example, use `registerWithDelay:5000` to register the ServiceWorker after 5 seconds. If\n   *     `<timeout>` is omitted, is defaults to `0`, which will register the ServiceWorker as soon\n   *     as possible but still asynchronously, once all pending micro-tasks are completed.\n   * - An Observable factory function: A function that returns an `Observable`.\n   *     The function will be used at runtime to obtain and subscribe to the `Observable` and the\n   *     ServiceWorker will be registered as soon as the first value is emitted.\n   *\n   * Default: 'registerWhenStable:30000'\n   */\n  registrationStrategy;\n}\n/**\n * @publicApi\n *\n * Sets up providers to register the given Angular Service Worker script.\n *\n * If `enabled` is set to `false` in the given options, the module will behave as if service\n * workers are not supported by the browser, and the service worker will not be registered.\n *\n * Example usage:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [\n *     provideServiceWorker('ngsw-worker.js')\n *   ],\n * });\n * ```\n */\nfunction provideServiceWorker(script, options = {}) {\n  return makeEnvironmentProviders([SwPush, SwUpdate, {\n    provide: SCRIPT,\n    useValue: script\n  }, {\n    provide: SwRegistrationOptions,\n    useValue: options\n  }, {\n    provide: NgswCommChannel,\n    useFactory: ngswCommChannelFactory,\n    deps: [SwRegistrationOptions, Injector]\n  }, provideAppInitializer(ngswAppInitializer)]);\n}\n\n/**\n * @publicApi\n */\nclass ServiceWorkerModule {\n  /**\n   * Register the given Angular Service Worker script.\n   *\n   * If `enabled` is set to `false` in the given options, the module will behave as if service\n   * workers are not supported by the browser, and the service worker will not be registered.\n   */\n  static register(script, options = {}) {\n    return {\n      ngModule: ServiceWorkerModule,\n      providers: [provideServiceWorker(script, options)]\n    };\n  }\n  static ɵfac = function ServiceWorkerModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ServiceWorkerModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ServiceWorkerModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [SwPush, SwUpdate]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ServiceWorkerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [SwPush, SwUpdate]\n    }]\n  }], null, null);\n})();\nexport { ServiceWorkerModule, SwPush, SwRegistrationOptions, SwUpdate, provideServiceWorker };\n","import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const jwtInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const authService = inject(AuthService);\r\n  const token = authService.token;\r\n  \r\n  if (token) {\r\n    req = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n  }\r\n  \r\n  return next(req);\r\n}; ","import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { catchError, throwError } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const errorInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const authService = inject(AuthService);\r\n  \r\n  return next(req).pipe(\r\n    catchError(error => {\r\n      if (error.status === 401) {\r\n        // Auto logout if 401 response returned from api\r\n        authService.logout();\r\n      }\r\n      \r\n      const errorMessage = error.error?.message || error.statusText || 'Unknown error';\r\n      return throwError(() => new Error(errorMessage));\r\n    })\r\n  );\r\n}; ","import { ApplicationConfig, provideZoneChangeDetection, isDevMode } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\r\n\r\nimport { routes } from './app.routes';\r\nimport { provideServiceWorker } from '@angular/service-worker';\r\nimport { jwtInterceptor } from './core/interceptors/jwt.interceptor';\r\nimport { errorInterceptor } from './core/interceptors/error.interceptor';\r\nimport { JwtModule, JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }), \r\n    provideRouter(routes), \r\n    provideHttpClient(withInterceptors([jwtInterceptor, errorInterceptor])),\r\n    provideServiceWorker('ngsw-worker.js', {\r\n      enabled: !isDevMode(),\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    }),\r\n    JwtHelperService\r\n  ]\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { jwtInterceptor } from './interceptors/jwt.interceptor';\r\nimport { errorInterceptor } from './interceptors/error.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useValue: jwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useValue: errorInterceptor, multi: true }\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { Component, OnInit, HostListener, Renderer2 } from '@angular/core';\r\nimport { RouterOutlet, Router, NavigationEnd } from '@angular/router';\r\nimport { AuthService } from './core/services/auth.service';\r\nimport { CoreModule } from './core/core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CartService } from './core/services/cart.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, CoreModule, SharedModule, CommonModule],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  isMenuCollapsed = true;\r\n  currentYear = new Date().getFullYear();\r\n  isScrolled = false;\r\n  \r\n  constructor(\r\n    public authService: AuthService,\r\n    public cartService: CartService,\r\n    private router: Router,\r\n    private renderer: Renderer2\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.checkScroll();\r\n    \r\n    // Initialize AOS (Animate On Scroll)\r\n    if (typeof window !== 'undefined') {\r\n      import('aos').then(module => {\r\n        const AOS = module.default;\r\n        AOS.init({\r\n          duration: 1000,\r\n          once: true,\r\n          easing: 'ease',\r\n        });\r\n      });\r\n    }\r\n    \r\n    // Set initial body class\r\n    this.updateBodyClass();\r\n    \r\n    // Listen for route changes to update body class\r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd)\r\n    ).subscribe(() => {\r\n      this.updateBodyClass();\r\n    });\r\n  }\r\n\r\n  private updateBodyClass(): void {\r\n    if (this.isHomePage()) {\r\n      this.renderer.addClass(document.body, 'has-hero-section');\r\n    } else {\r\n      this.renderer.removeClass(document.body, 'has-hero-section');\r\n    }\r\n  }\r\n  \r\n  @HostListener('window:scroll', [])\r\n  checkScroll() {\r\n    this.isScrolled = window.pageYOffset > 100;\r\n  }\r\n\r\n  scrollToTop() {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }\r\n  \r\n  // Check if the current page is home or restaurant pages\r\n  isHomePage(): boolean {\r\n    const currentUrl = this.router.url;\r\n    return currentUrl === '/' || \r\n           currentUrl === '/home' || \r\n           currentUrl.startsWith('/restaurants');\r\n  }\r\n}\r\n","<div class=\"app-container\">\r\n  <header>\r\n    <nav class=\"navbar navbar-expand-lg fixed-top\" \r\n         [ngClass]=\"{'navbar-scrolled shadow-lg': isScrolled, \r\n                    'navbar-transparent': !isScrolled && isHomePage(),\r\n                    'navbar-light bg-white': !isHomePage()}\">\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand d-flex align-items-center\" routerLink=\"/\">\r\n          <i class=\"fas fa-utensils me-2\"></i>\r\n          <span>QualiFoodie</span>\r\n        </a>\r\n        <button class=\"navbar-toggler\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n          <i class=\"fas fa-bars\"></i>\r\n        </button>\r\n        \r\n        <div class=\"collapse navbar-collapse\" [class.show]=\"!isMenuCollapsed\">\r\n          <ul class=\"navbar-nav mx-auto mb-2 mb-lg-0\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n                <i class=\"fas fa-home me-1\"></i> Home\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/restaurants\" routerLinkActive=\"active\">\r\n                <i class=\"fas fa-store me-1\"></i> Restaurants\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"authService.isLoggedIn\">\r\n              <a class=\"nav-link\" routerLink=\"/orders\" routerLinkActive=\"active\">\r\n                <i class=\"fas fa-clipboard-list me-1\"></i> My Orders\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"authService.isAdmin\">\r\n              <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">\r\n                <i class=\"fas fa-user-shield me-1\"></i> Admin\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div class=\"navbar-nav\">\r\n            <a class=\"nav-link position-relative me-3\" routerLink=\"/cart\">\r\n              <i class=\"fas fa-shopping-cart fs-5\"></i>\r\n              <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger animate__animated animate__pulse animate__infinite\" *ngIf=\"cartService.totalItems > 0\">\r\n                {{ cartService.totalItems }}\r\n              </span>\r\n            </a>\r\n            <ng-container *ngIf=\"!authService.isLoggedIn\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <a class=\"nav-link me-3\" routerLink=\"/auth/login\">\r\n                  <i class=\"fas fa-sign-in-alt me-1\"></i> Login\r\n                </a>\r\n                <a class=\"btn btn-primary rounded-pill px-3 d-flex align-items-center\" routerLink=\"/auth/register\">\r\n                  <i class=\"fas fa-user-plus me-1\"></i> Register\r\n                </a>\r\n              </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"authService.isLoggedIn\">\r\n              <div class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle d-flex align-items-center\" href=\"#\" id=\"userDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  <i class=\"fas fa-user-circle me-1 fs-5\"></i>\r\n                  {{ authService.currentUser?.name }}\r\n                </a>\r\n                <ul class=\"dropdown-menu dropdown-menu-end shadow-sm border-0\" aria-labelledby=\"userDropdown\">\r\n                  <li><a class=\"dropdown-item\" routerLink=\"/profile\"><i class=\"fas fa-user me-2\"></i>Profile</a></li>\r\n                  <li><hr class=\"dropdown-divider\"></li>\r\n                  <li><a class=\"dropdown-item\" (click)=\"authService.logout()\"><i class=\"fas fa-sign-out-alt me-2\"></i>Logout</a></li>\r\n                </ul>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n\r\n  <main>\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n\r\n  <footer class=\"bg-dark text-light py-5\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-6 mb-4 mb-md-0\">\r\n          <h5 class=\"text-uppercase mb-4\"><i class=\"fas fa-utensils me-2\"></i>QualiFoodie</h5>\r\n          <p class=\"mb-3\">Delicious food delivered to your doorstep. Order from the best restaurants in town with just a few clicks.</p>\r\n          <div class=\"social-icons\">\r\n            <a href=\"#\" class=\"me-3 text-light fs-5\"><i class=\"fab fa-facebook\"></i></a>\r\n            <a href=\"#\" class=\"me-3 text-light fs-5\"><i class=\"fab fa-instagram\"></i></a>\r\n            <a href=\"#\" class=\"me-3 text-light fs-5\"><i class=\"fab fa-twitter\"></i></a>\r\n            <a href=\"#\" class=\"text-light fs-5\"><i class=\"fab fa-youtube\"></i></a>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2 col-md-6 mb-4 mb-md-0\">\r\n          <h5 class=\"text-uppercase mb-4\">Quick Links</h5>\r\n          <ul class=\"list-unstyled\">\r\n            <li class=\"mb-2\"><a routerLink=\"/\" class=\"text-light text-decoration-none\"><i class=\"fas fa-angle-right me-2\"></i>Home</a></li>\r\n            <li class=\"mb-2\"><a routerLink=\"/restaurants\" class=\"text-light text-decoration-none\"><i class=\"fas fa-angle-right me-2\"></i>Restaurants</a></li>\r\n            <li class=\"mb-2\"><a routerLink=\"/auth/register\" class=\"text-light text-decoration-none\"><i class=\"fas fa-angle-right me-2\"></i>Register</a></li>\r\n            <li class=\"mb-2\"><a routerLink=\"/auth/login\" class=\"text-light text-decoration-none\"><i class=\"fas fa-angle-right me-2\"></i>Login</a></li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n          <h5 class=\"text-uppercase mb-4\">Contact Us</h5>\r\n          <ul class=\"list-unstyled\">\r\n            <li class=\"mb-3\"><i class=\"fas fa-map-marker-alt me-2\"></i> 123 Foodie Street, Tasty City</li>\r\n            <li class=\"mb-3\"><i class=\"fas fa-envelope me-2\"></i> support&#64;qualifoodie.com</li>\r\n            <li class=\"mb-3\"><i class=\"fas fa-phone me-2\"></i> (555) 123-4567</li>\r\n            <li class=\"mb-3\"><i class=\"fas fa-clock me-2\"></i> Mon-Sun: 8:00 AM - 11:00 PM</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col-lg-3 col-md-6\">\r\n          <h5 class=\"text-uppercase mb-4\">Newsletter</h5>\r\n          <p>Subscribe to get special offers and updates</p>\r\n          <div class=\"input-group mb-3\">\r\n            <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" aria-label=\"Email Address\">\r\n            <button class=\"btn btn-primary\" type=\"button\"><i class=\"fas fa-paper-plane\"></i></button>\r\n          </div>\r\n          <div class=\"mt-4\">\r\n            <img src=\"assets/images/payment-methods.png\" alt=\"Payment Methods\" class=\"img-fluid\" style=\"max-height: 30px;\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr class=\"my-4\">\r\n      <div class=\"row align-items-center\">\r\n        <div class=\"col-md-6 text-center text-md-start\">\r\n          &copy; {{ currentYear }} QualiFoodie. All rights reserved.\r\n        </div>\r\n        <div class=\"col-md-6 text-center text-md-end\">\r\n          <a href=\"#\" class=\"text-light text-decoration-none me-3\">Privacy Policy</a>\r\n          <a href=\"#\" class=\"text-light text-decoration-none me-3\">Terms & Conditions</a>\r\n          <a href=\"#\" class=\"text-light text-decoration-none\">FAQs</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n\r\n  <!-- Back to top button -->\r\n  <button class=\"btn btn-primary back-to-top\" [ngClass]=\"{'show': isScrolled}\" (click)=\"scrollToTop()\">\r\n    <i class=\"fas fa-chevron-up\"></i>\r\n  </button>\r\n</div>\r\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],"mappings":"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","names":[],"x_google_ignoreList":[1]}