import{$a as m,B as l,e as r,f as g,h as n,i as u,m as h,pb as f,r as c,rb as R,u as s,y as C}from"./chunk-57XHIBD7.js";import{a as p,b as d}from"./chunk-AIZVJUQQ.js";var v=class o{constructor(a,t){this.http=a;this.authService=t}apiUrl=`${f.apiUrl}/restaurants`;restaurantsCache=null;restaurantCache=new Map;managedRestaurantsCache=null;lastCacheTime=0;lastManagedCacheTime=0;CACHE_DURATION=6e4;getAll(){let a=Date.now();return this.restaurantsCache&&a-this.lastCacheTime<this.CACHE_DURATION?(console.log("Using cached restaurants data"),r(this.restaurantsCache)):this.http.get(this.apiUrl).pipe(n(1e4),u(t=>t.map(e=>d(p({},e),{description:e.description||"A delightful restaurant serving wonderful dishes."}))),s(t=>{console.log("Updating restaurant cache with",t.length,"restaurants"),this.restaurantsCache=t,this.lastCacheTime=a,t.forEach(e=>{e.id&&this.restaurantCache.set(e.id,e)})}),c(1),h(t=>(console.error("Error fetching restaurants:",t),this.restaurantsCache?(console.log("Returning expired cache data as fallback"),r(this.restaurantsCache)):r([]))))}getById(a){return this.restaurantCache.has(a)?(console.log("Using cached restaurant data for id:",a),r(this.restaurantCache.get(a))):this.http.get(`${this.apiUrl}/${a}`).pipe(n(5e3),s(t=>{t&&t.id&&this.restaurantCache.set(a,t)}),c(1),h(t=>{if(console.error(`Error fetching restaurant with id ${a}:`,t),this.restaurantsCache){let e=this.restaurantsCache.find(i=>i.id===a);if(e)return console.log("Using restaurant from all-restaurants cache as fallback"),r(e)}return g(()=>new Error(`Failed to load restaurant details: ${t.message||"Network error"}`))}))}create(a){return this.http.post(this.apiUrl,a).pipe(u(t=>t.data),s(()=>{this.clearCache()}))}update(a,t){return this.http.put(`${this.apiUrl}/${a}`,t).pipe(s(()=>{this.clearCache()}))}delete(a){return this.http.delete(`${this.apiUrl}/${a}`).pipe(s(()=>{this.clearCache()}))}getManagedRestaurants(){let a=Date.now();return this.managedRestaurantsCache&&a-this.lastManagedCacheTime<this.CACHE_DURATION?(console.log("Using cached managed restaurants data"),r(this.managedRestaurantsCache)):this.authService.currentUser?.id?this.http.get(`${this.apiUrl}/managed`).pipe(n(1e4),s(e=>{console.log("Updating managed restaurant cache with",e.length,"restaurants"),this.managedRestaurantsCache=e,this.lastManagedCacheTime=a,e.forEach(i=>{i.id&&this.restaurantCache.set(i.id,i)})}),c(1),h(e=>(console.error("Error fetching managed restaurants:",e),this.managedRestaurantsCache?(console.log("Returning expired cache data as fallback"),r(this.managedRestaurantsCache)):r([])))):r([])}clearCache(){console.log("Clearing restaurant cache"),this.restaurantsCache=null,this.restaurantCache.clear(),this.managedRestaurantsCache=null,this.lastCacheTime=0,this.lastManagedCacheTime=0}getCacheStatus(){return{restaurantsCached:this.restaurantsCache?this.restaurantsCache.length:0,individualCached:this.restaurantCache.size,age:this.lastCacheTime?Date.now()-this.lastCacheTime:0}}static \u0275fac=function(t){return new(t||o)(l(m),l(R))};static \u0275prov=C({token:o,factory:o.\u0275fac,providedIn:"root"})};export{v as a};
