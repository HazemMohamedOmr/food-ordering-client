{
  "version": 3,
  "sources": ["src/app/features/admin/user-management/user-management.component.ts", "src/app/features/admin/user-management/user-management.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterLink } from '@angular/router';\r\nimport { User, UserRole } from '../../../core/models/user.model';\r\nimport { AdminService } from '../../../core/services/admin.service';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, RouterLink],\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.scss']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: User[] = [];\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  UserRole = UserRole; // Make enum available in template\r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    public authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Only allow access to admin users\r\n    if (!this.authService.isLoggedIn || !this.authService.isAdmin) {\r\n      this.router.navigate(['/']);\r\n      return;\r\n    }\r\n\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers(): void {\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n\r\n    this.adminService.getAllUsers().subscribe({\r\n      next: (data) => {\r\n        this.users = data;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        this.errorMessage = error.message || 'Failed to load users';\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUserRole(user: User, newRole: UserRole): void {\r\n    // Don't update if it's the same role\r\n    if (user.role === newRole) return;\r\n    \r\n    // Don't allow promoting to Admin through the API\r\n    if (newRole === UserRole.Admin) {\r\n      this.errorMessage = 'Cannot promote users to Admin through the API';\r\n      return;\r\n    }\r\n    \r\n    // Don't allow changing your own role\r\n    if (user.id === this.authService.currentUser?.id) {\r\n      this.errorMessage = 'Cannot change your own role';\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n    \r\n    this.adminService.updateUserRole(user.id!, newRole).subscribe({\r\n      next: () => {\r\n        this.isLoading = false;\r\n        user.role = newRole;\r\n        this.successMessage = `Updated ${user.name}'s role successfully`;\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        this.errorMessage = error.message || 'Failed to update user role';\r\n      }\r\n    });\r\n  }\r\n  \r\n  getRoleName(role: UserRole): string {\r\n    switch(role) {\r\n      case UserRole.Admin: return 'Admin';\r\n      case UserRole.Manager: return 'Manager';\r\n      case UserRole.EndUser: return 'User';\r\n      default: return 'Unknown';\r\n    }\r\n  }\r\n} ", "<div class=\"container py-4\">\r\n  <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n    <h1>User Management</h1>\r\n    <button class=\"btn btn-primary\" routerLink=\"/admin\">\r\n      <i class=\"fas fa-arrow-left me-2\"></i> Back to Dashboard\r\n    </button>\r\n  </div>\r\n  \r\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\r\n    {{ errorMessage }}\r\n  </div>\r\n  \r\n  <div *ngIf=\"successMessage\" class=\"alert alert-success\">\r\n    {{ successMessage }}\r\n  </div>\r\n  \r\n  <div *ngIf=\"isLoading\" class=\"text-center my-5\">\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card mb-5\">\r\n    <div class=\"card-header bg-primary text-white\">\r\n      <div class=\"d-flex justify-content-between align-items-center\">\r\n        <h5 class=\"mb-0\"><i class=\"fas fa-users me-2\"></i> System Users</h5>\r\n        <button class=\"btn btn-sm btn-light\" (click)=\"loadUsers()\">\r\n          <i class=\"fas fa-sync-alt me-2\"></i> Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Role</th>\r\n              <th>Created</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngIf=\"users.length === 0 && !isLoading\">\r\n              <td colspan=\"6\" class=\"text-center\">No users found</td>\r\n            </tr>\r\n            <tr *ngFor=\"let user of users\">\r\n              <td>{{ user.name }}</td>\r\n              <td>{{ user.email }}</td>\r\n              <td>{{ user.phoneNumber || 'N/A' }}</td>\r\n              <td>\r\n                <span class=\"badge\" \r\n                    [ngClass]=\"{\r\n                      'bg-danger': user.role === UserRole.Admin, \r\n                      'bg-primary': user.role === UserRole.Manager,\r\n                      'bg-secondary': user.role === UserRole.EndUser\r\n                    }\">\r\n                  {{ getRoleName(user.role || UserRole.EndUser) }}\r\n                </span>\r\n              </td>\r\n              <td>{{ user.createdAt ? (user.createdAt | date:'medium') : 'N/A' }}</td>\r\n              <td>\r\n                <div class=\"btn-group\">\r\n                  <button class=\"btn btn-sm btn-outline-primary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    Change Role\r\n                  </button>\r\n                  <ul class=\"dropdown-menu\">\r\n                    <!-- No option to promote to admin -->\r\n                    <li>\r\n                      <button class=\"dropdown-item\" \r\n                              [disabled]=\"user.role === UserRole.Manager || user.id === authService.currentUser?.id\"\r\n                              (click)=\"updateUserRole(user, UserRole.Manager)\">\r\n                        Promote to Manager\r\n                      </button>\r\n                    </li>\r\n                    <li>\r\n                      <button class=\"dropdown-item\"\r\n                              [disabled]=\"user.role === UserRole.EndUser || user.id === authService.currentUser?.id\"\r\n                              (click)=\"updateUserRole(user, UserRole.EndUser)\">\r\n                        Demote to User\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"mb-5 pb-5\">\r\n    <!-- Extra padding at the bottom -->\r\n  </div>\r\n</div> "],
  "mappings": "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",
  "names": []
}
