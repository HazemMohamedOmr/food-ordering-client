{"version":3,"sources":["src/app/core/models/user.model.ts","node_modules/@auth0/angular-jwt/fesm2020/auth0-angular-jwt.mjs","src/app/core/services/auth.service.ts"],"sourcesContent":["export enum UserRole {\r\n  Admin = 1,\r\n  Manager = 2,\r\n  EndUser = 3\r\n}\r\n\r\nexport interface User {\r\n  id?: string;\r\n  name: string;\r\n  email: string;\r\n  phoneNumber?: string;\r\n  role?: UserRole;\r\n  roleName?: string;\r\n  createdAt?: Date;\r\n  token?: string;\r\n}\r\n\r\nexport interface UserLogin {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface UserRegister {\r\n  name: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  role?: UserRole;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  token: string;\r\n  expiration: string;\r\n  user: User;\r\n} ","import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { defer, of } from 'rxjs';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nconst JWT_OPTIONS = new InjectionToken('JWT_OPTIONS');\n\n/* eslint-disable no-bitwise */\nclass JwtHelperService {\n  constructor(config = null) {\n    this.tokenGetter = config && config.tokenGetter || function () {};\n  }\n  urlBase64Decode(str) {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n      case 0:\n        {\n          break;\n        }\n      case 2:\n        {\n          output += '==';\n          break;\n        }\n      case 3:\n        {\n          output += '=';\n          break;\n        }\n      default:\n        {\n          throw new Error('Illegal base64url string!');\n        }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n  // credits for decoder goes to https://github.com/atk\n  b64decode(str) {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output = '';\n    str = String(str).replace(/=+$/, '');\n    if (str.length % 4 === 1) {\n      throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n    }\n    for (\n    // initialize result and counters\n    let bc = 0, bs, buffer, idx = 0;\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n    // and if not first of each 4 characters,\n    // convert the first 8 bits to one ascii character\n    bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n  b64DecodeUnicode(str) {\n    return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), c => {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n  }\n  decodeToken(token = this.tokenGetter()) {\n    if (token instanceof Promise) {\n      return token.then(t => this._decodeToken(t));\n    }\n    return this._decodeToken(token);\n  }\n  _decodeToken(token) {\n    if (!token || token === '') {\n      return null;\n    }\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      throw new Error(`The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.`);\n    }\n    const decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error('Cannot decode the token.');\n    }\n    return JSON.parse(decoded);\n  }\n  getTokenExpirationDate(token = this.tokenGetter()) {\n    if (token instanceof Promise) {\n      return token.then(t => this._getTokenExpirationDate(t));\n    }\n    return this._getTokenExpirationDate(token);\n  }\n  _getTokenExpirationDate(token) {\n    let decoded;\n    decoded = this.decodeToken(token);\n    if (!decoded || !decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    return date;\n  }\n  isTokenExpired(token = this.tokenGetter(), offsetSeconds) {\n    if (token instanceof Promise) {\n      return token.then(t => this._isTokenExpired(t, offsetSeconds));\n    }\n    return this._isTokenExpired(token, offsetSeconds);\n  }\n  _isTokenExpired(token, offsetSeconds) {\n    if (!token || token === '') {\n      return true;\n    }\n    const date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n    if (date === null) {\n      return false;\n    }\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n  getAuthScheme(authScheme, request) {\n    if (typeof authScheme === 'function') {\n      return authScheme(request);\n    }\n    return authScheme;\n  }\n}\nJwtHelperService.ɵfac = function JwtHelperService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || JwtHelperService)(i0.ɵɵinject(JWT_OPTIONS));\n};\nJwtHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: JwtHelperService,\n  factory: JwtHelperService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JwtHelperService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [JWT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\nconst fromPromiseOrValue = input => {\n  if (input instanceof Promise) {\n    return defer(() => input);\n  }\n  return of(input);\n};\nclass JwtInterceptor {\n  constructor(config, jwtHelper, document) {\n    this.jwtHelper = jwtHelper;\n    this.document = document;\n    this.standardPorts = ['80', '443'];\n    this.tokenGetter = config.tokenGetter;\n    this.headerName = config.headerName || 'Authorization';\n    this.authScheme = config.authScheme || config.authScheme === '' ? config.authScheme : 'Bearer ';\n    this.allowedDomains = config.allowedDomains || [];\n    this.disallowedRoutes = config.disallowedRoutes || [];\n    this.throwNoTokenError = config.throwNoTokenError || false;\n    this.skipWhenExpired = config.skipWhenExpired;\n  }\n  isAllowedDomain(request) {\n    const requestUrl = new URL(request.url, this.document.location.origin);\n    // If the host equals the current window origin,\n    // the domain is allowed by default\n    if (requestUrl.host === this.document.location.host) {\n      return true;\n    }\n    // If not the current domain, check the allowed list\n    const hostName = `${requestUrl.hostname}${requestUrl.port && !this.standardPorts.includes(requestUrl.port) ? ':' + requestUrl.port : ''}`;\n    return this.allowedDomains.findIndex(domain => typeof domain === 'string' ? domain === hostName : domain instanceof RegExp ? domain.test(hostName) : false) > -1;\n  }\n  isDisallowedRoute(request) {\n    const requestedUrl = new URL(request.url, this.document.location.origin);\n    return this.disallowedRoutes.findIndex(route => {\n      if (typeof route === 'string') {\n        const parsedRoute = new URL(route, this.document.location.origin);\n        return parsedRoute.hostname === requestedUrl.hostname && parsedRoute.pathname === requestedUrl.pathname;\n      }\n      if (route instanceof RegExp) {\n        return route.test(request.url);\n      }\n      return false;\n    }) > -1;\n  }\n  handleInterception(token, request, next) {\n    const authScheme = this.jwtHelper.getAuthScheme(this.authScheme, request);\n    if (!token && this.throwNoTokenError) {\n      throw new Error('Could not get token from tokenGetter function.');\n    }\n    let tokenIsExpired = of(false);\n    if (this.skipWhenExpired) {\n      tokenIsExpired = token ? fromPromiseOrValue(this.jwtHelper.isTokenExpired(token)) : of(true);\n    }\n    if (token) {\n      return tokenIsExpired.pipe(map(isExpired => isExpired && this.skipWhenExpired ? request.clone() : request.clone({\n        setHeaders: {\n          [this.headerName]: `${authScheme}${token}`\n        }\n      })), mergeMap(innerRequest => next.handle(innerRequest)));\n    }\n    return next.handle(request);\n  }\n  intercept(request, next) {\n    if (!this.isAllowedDomain(request) || this.isDisallowedRoute(request)) {\n      return next.handle(request);\n    }\n    const token = this.tokenGetter(request);\n    return fromPromiseOrValue(token).pipe(mergeMap(asyncToken => {\n      return this.handleInterception(asyncToken, request, next);\n    }));\n  }\n}\nJwtInterceptor.ɵfac = function JwtInterceptor_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || JwtInterceptor)(i0.ɵɵinject(JWT_OPTIONS), i0.ɵɵinject(JwtHelperService), i0.ɵɵinject(DOCUMENT));\n};\nJwtInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: JwtInterceptor,\n  factory: JwtInterceptor.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JwtInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [JWT_OPTIONS]\n      }]\n    }, {\n      type: JwtHelperService\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\nclass JwtModule {\n  constructor(parentModule) {\n    if (parentModule) {\n      throw new Error(`JwtModule is already loaded. It should only be imported in your application's main module.`);\n    }\n  }\n  static forRoot(options) {\n    return {\n      ngModule: JwtModule,\n      providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: JwtInterceptor,\n        multi: true\n      }, options.jwtOptionsProvider || {\n        provide: JWT_OPTIONS,\n        useValue: options.config\n      }, JwtHelperService]\n    };\n  }\n}\nJwtModule.ɵfac = function JwtModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || JwtModule)(i0.ɵɵinject(JwtModule, 12));\n};\nJwtModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: JwtModule\n});\nJwtModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JwtModule, [{\n    type: NgModule\n  }], function () {\n    return [{\n      type: JwtModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }];\n  }, null);\n})();\n\n/*\n * Public API Surface of angular-jwt\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JWT_OPTIONS, JwtHelperService, JwtInterceptor, JwtModule };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { AuthResponse, User, UserLogin, UserRegister, UserRole } from '../models/user.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n  private jwtHelper = new JwtHelperService();\r\n  \r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.loadUserFromStorage();\r\n  }\r\n\r\n  private loadUserFromStorage(): void {\r\n    const token = localStorage.getItem('token');\r\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n      try {\r\n        const userData = this.jwtHelper.decodeToken(token);\r\n        console.log('Decoded token:', userData);\r\n        \r\n        if (userData) {\r\n          // Extract role from token - be more flexible with how role is stored\r\n          let userRole = UserRole.EndUser; // Default\r\n          \r\n          // First check session storage as a reliable source of role\r\n          const sessionRole = sessionStorage.getItem('userRole');\r\n          if (sessionRole) {\r\n            userRole = parseInt(sessionRole, 10);\r\n            console.log('Using role from session storage:', userRole);\r\n          }\r\n          // If not in session storage, try to extract from token\r\n          else if (userData.role) {\r\n            if (typeof userData.role === 'string') {\r\n              // Handle string roles like \"Admin\", \"1\", etc.\r\n              if (userData.role === \"1\" || userData.role.toLowerCase() === \"admin\") {\r\n                userRole = UserRole.Admin;\r\n              } else if (userData.role === \"2\" || userData.role.toLowerCase() === \"manager\") {\r\n                userRole = UserRole.Manager;\r\n              }\r\n            } else if (typeof userData.role === 'number') {\r\n              // Handle numeric roles\r\n              userRole = userData.role;\r\n            }\r\n          } else if (userData['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']) {\r\n            // Some JWT tokens store role in this format\r\n            const roleValue = userData['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n            if (roleValue === \"1\" || roleValue === \"Admin\") {\r\n              userRole = UserRole.Admin;\r\n            } else if (roleValue === \"2\" || roleValue === \"Manager\") {\r\n              userRole = UserRole.Manager;\r\n            }\r\n          }\r\n          \r\n          const user: User = {\r\n            id: userData.nameid || userData.sub || userData.id,\r\n            name: userData.name || userData.unique_name || userData.username,\r\n            email: userData.email,\r\n            role: userRole\r\n          };\r\n          \r\n          this.currentUserSubject.next(user);\r\n          console.log('User loaded from storage:', user);\r\n          console.log('Is admin?', user.role === UserRole.Admin);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n        this.logout();\r\n      }\r\n    } else if (token && this.jwtHelper.isTokenExpired(token)) {\r\n      console.warn('Token expired, logging out');\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n  login(credentials: UserLogin): Observable<AuthResponse> {\r\n    return this.http.post<AuthResponse>(`${environment.apiUrl}/auth/login`, credentials)\r\n      .pipe(\r\n        tap(response => {\r\n          console.log('Login response:', response);\r\n          this.handleAuthResponse(response);\r\n        })\r\n      );\r\n  }\r\n\r\n  register(user: UserRegister): Observable<AuthResponse> {\r\n    return this.http.post<AuthResponse>(`${environment.apiUrl}/auth/register`, user)\r\n      .pipe(\r\n        tap(response => {\r\n          console.log('Register response:', response);\r\n          this.handleAuthResponse(response);\r\n        })\r\n      );\r\n  }\r\n\r\n  private handleAuthResponse(response: AuthResponse): void {\r\n    if (response && response.token) {\r\n      console.log('Storing token:', response.token);\r\n      localStorage.setItem('token', response.token);\r\n      \r\n      // Save user role in session storage\r\n      if (response.user && response.user.role) {\r\n        sessionStorage.setItem('userRole', response.user.role.toString());\r\n        console.log('Stored user role in session storage:', response.user.role);\r\n      }\r\n      \r\n      this.currentUserSubject.next(response.user);\r\n    } else {\r\n      console.error('No token in auth response');\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    sessionStorage.removeItem('userRole');\r\n    this.currentUserSubject.next(null);\r\n    this.router.navigate(['/auth/login']);\r\n  }\r\n\r\n  get currentUser(): User | null {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  get token(): string | null {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    const token = this.token;\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    try {\r\n      return !this.jwtHelper.isTokenExpired(token);\r\n    } catch (error) {\r\n      console.error('Error checking token expiration:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get isAdmin(): boolean {\r\n    const user = this.currentUser;\r\n    let isAdmin = user?.role === UserRole.Admin;\r\n    \r\n    // If user state doesn't show admin but session storage does, use that as fallback\r\n    if (!isAdmin && sessionStorage.getItem('userRole') === UserRole.Admin.toString()) {\r\n      console.log('Admin role detected from session storage');\r\n      isAdmin = true;\r\n    }\r\n    return isAdmin;\r\n  }\r\n\r\n  get isManager(): boolean {\r\n    const user = this.currentUser;\r\n    return user?.role === UserRole.Manager;\r\n  }\r\n\r\n  get isEndUser(): boolean {\r\n    const user = this.currentUser;\r\n    return user?.role === UserRole.EndUser;\r\n  }\r\n\r\n  updateProfile(user: User): Observable<User> {\r\n    return this.http.put<User>(`${environment.apiUrl}/users/${user.id}`, user).pipe(\r\n      tap((updatedUser) => {\r\n        this.storeUserData(updatedUser);\r\n      })\r\n    );\r\n  }\r\n\r\n  storeUserData(user: User): void {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSubject.next(user);\r\n  }\r\n\r\n  private getDecodedToken(): any {\r\n    const token = this.token;\r\n    if (token) {\r\n      try {\r\n        return this.jwtHelper.decodeToken(token);\r\n      } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n} "],"mappings":"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","names":["UserRole"],"x_google_ignoreList":[1]}