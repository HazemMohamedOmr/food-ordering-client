{
  "version": 3,
  "sources": ["src/app/features/profile/profile.component.ts", "src/app/features/profile/profile.component.html", "src/app/features/profile/profile.routes.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../core/services/auth.service';\r\nimport { User } from '../../core/models/user.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profileForm: FormGroup;\r\n  user: User | null = null;\r\n  isLoading = false;\r\n  isSaving = false;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.profileForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phoneNumber: ['', Validators.pattern(/^\\+?[0-9]{10,15}$/)]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    \r\n    if (!this.authService.isLoggedIn) {\r\n      this.router.navigate(['/auth/login'], { queryParams: { returnUrl: '/profile' } });\r\n      return;\r\n    }\r\n    \r\n    this.user = this.authService.currentUser;\r\n    \r\n    if (this.user) {\r\n      this.profileForm.patchValue({\r\n        name: this.user.name,\r\n        email: this.user.email,\r\n        phoneNumber: this.user.phoneNumber || ''\r\n      });\r\n    }\r\n    \r\n    this.isLoading = false;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.profileForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isSaving = true;\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n\r\n    const updatedUser = {\r\n      ...this.user,\r\n      ...this.profileForm.value\r\n    };\r\n\r\n    this.authService.updateProfile(updatedUser).subscribe({\r\n      next: (user) => {\r\n        this.user = user;\r\n        this.isSaving = false;\r\n        this.successMessage = 'Profile updated successfully!';\r\n        \r\n        // Update the stored user data\r\n        this.authService.storeUserData(user);\r\n      },\r\n      error: (error) => {\r\n        this.isSaving = false;\r\n        this.errorMessage = error.message || 'Failed to update profile. Please try again.';\r\n      }\r\n    });\r\n  }\r\n\r\n  changePassword(): void {\r\n    this.router.navigate(['/profile/change-password']);\r\n  }\r\n} ", "<div class=\"container py-4\">\r\n  <h1 class=\"mb-4\">My Profile</h1>\r\n  \r\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\r\n    {{ errorMessage }}\r\n  </div>\r\n  \r\n  <div *ngIf=\"successMessage\" class=\"alert alert-success\">\r\n    {{ successMessage }}\r\n  </div>\r\n  \r\n  <div *ngIf=\"isLoading\" class=\"text-center my-5\">\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  </div>\r\n  \r\n  <div *ngIf=\"!isLoading && user\" class=\"row\">\r\n    <div class=\"col-md-8\">\r\n      <div class=\"card shadow-sm\">\r\n        <div class=\"card-header bg-light\">\r\n          <h5 class=\"mb-0\">Profile Information</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"name\" class=\"form-label\">Name</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\r\n              <div *ngIf=\"profileForm.get('name')?.invalid && profileForm.get('name')?.touched\" class=\"text-danger small\">\r\n                Name is required\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"email\" class=\"form-label\">Email</label>\r\n              <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\">\r\n              <div *ngIf=\"profileForm.get('email')?.invalid && profileForm.get('email')?.touched\" class=\"text-danger small\">\r\n                <span *ngIf=\"profileForm.get('email')?.errors?.['required']\">Email is required</span>\r\n                <span *ngIf=\"profileForm.get('email')?.errors?.['email']\">Please enter a valid email address</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"phoneNumber\" class=\"form-label\">Phone Number</label>\r\n              <input type=\"tel\" class=\"form-control\" id=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n              <div *ngIf=\"profileForm.get('phoneNumber')?.invalid && profileForm.get('phoneNumber')?.touched\" class=\"text-danger small\">\r\n                Please enter a valid phone number\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"d-flex justify-content-between\">\r\n              <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"profileForm.invalid || isSaving\">\r\n                <span *ngIf=\"!isSaving\">Save Changes</span>\r\n                <span *ngIf=\"isSaving\">\r\n                  <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  Saving...\r\n                </span>\r\n              </button>\r\n              \r\n              <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePassword()\">\r\n                Change Password\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-md-4\">\r\n      <div class=\"card shadow-sm\">\r\n        <div class=\"card-header bg-light\">\r\n          <h5 class=\"mb-0\">Account Information</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <p><strong>User ID:</strong> {{ user.id }}</p>\r\n          <p><strong>Role:</strong> {{ user.role }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> ", "import { Routes } from '@angular/router';\r\nimport { ProfileComponent } from './profile.component';\r\n\r\nexport const PROFILE_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfileComponent\r\n  }\r\n]; "],
  "mappings": "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",
  "names": []
}
